C51 COMPILER V9.01   SNACK                                                                 12/05/2018 20:25:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SNACK
OBJECT MODULE PLACED IN snack.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE snack.c COMPACT BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"snack.h"
   2          
   3          #include<stdlib.h>
   4          
   5          pos head,speed;
   6          pos food,body[20];
   7          u16 length,score;
   8          
   9          sbit k1=P3^1;
  10          sbit k2=P3^0;
  11          sbit k3=P3^2;
  12          sbit k4=P3^3;
  13          
  14          
  15          
  16          void SnackInit()
  17          {
  18   1              
  19   1              food.x=rand()%8;
  20   1              food.y=rand()%8;
  21   1              head.x=3;
  22   1              head.y=3;
  23   1              speed.x=1;
  24   1              speed.y=0;
  25   1              length=2;
  26   1              score=0;
  27   1              body[0].x=2;
  28   1              body[0].y=3;
  29   1              body[1].x=1;
  30   1              body[1].y=3;
  31   1      }
  32          
  33          void snack_move()
  34          {
  35   1              u16 i;
  36   1              slow++;
  37   1              if(slow==30)       //控制小蛇移动的快慢
  38   1              {
  39   2                      slow=0;
  40   2                      
  41   2                      
  42   2                      if(speed.x||speed.y )    //蛇身移动的条件：蛇头必须有速度，不然不移动
  43   2                      {
  44   3                              
  45   3                              for(i=length-1;i>0;i--)
  46   3                              {
  47   4                                      body[i].x=body[i-1].x;
  48   4                                      body[i].y=body[i-1].y;
  49   4                              }
  50   3                              body[0].x=head.x;body[0].y=head.y;
  51   3                      }
  52   2                      head.x=head.x+speed.x;
  53   2                      head.y=head.y+speed.y;  
  54   2                      if(speed.x==1&&head.x==8)
  55   2                              head.x=0;
C51 COMPILER V9.01   SNACK                                                                 12/05/2018 20:25:58 PAGE 2   

  56   2                      if(speed.x==-1&&head.x==-1)
  57   2                              head.x=7;
  58   2                      if(speed.y==1&&head.y==8)
  59   2                              head.y=0;
  60   2                      if(speed.y==-1&&head.y==-1)
  61   2                              head.y=7;
  62   2              }
  63   1      
  64   1                      
  65   1      }
  66          
  67          
  68          
  69          void snack_turn()
  70          {
  71   1              if(k1==0)
  72   1              {
  73   2                      delay(1);
  74   2                      if(k1==0&&speed.x!=0)
  75   2                      {
  76   3                              speed.x=0;
  77   3                              speed.y=-1;
  78   3                      }
  79   2              //      while(!k1);
  80   2              }
  81   1              if(k2==0)
  82   1              {
  83   2                      delay(1);
  84   2                      if(k2==0&&speed.y!=0)
  85   2                      {
  86   3                              speed.y=0;
  87   3                              speed.x=-1;     
  88   3                      }
  89   2              //      while(!k2);
  90   2              }
  91   1      
  92   1              if(k3==0)
  93   1              {
  94   2                      delay(1);
  95   2                      if(k3==0&&speed.x!=0)
  96   2                      {
  97   3                              speed.x=0;
  98   3                              speed.y=1;
  99   3                      }
 100   2              //      while(!k3);
 101   2              }
 102   1              if(k4==0)
 103   1              {
 104   2                      delay(1);
 105   2                      if(k4==0&&speed.y!=0)
 106   2                      {
 107   3                              speed.y=0;
 108   3                              speed.x=1;
 109   3                      }
 110   2              //      while(!k4);
 111   2              }       
 112   1      
 113   1      }
 114          
 115          
 116          void snack_add()
 117          {
C51 COMPILER V9.01   SNACK                                                                 12/05/2018 20:25:58 PAGE 3   

 118   1              u16 i;
 119   1              
 120   1              if((head.x)==food.x&&(head.y)==food.y)
 121   1              {
 122   2                              
 123   2                      length++;
 124   2                      for(i=length-1;i>0;i--)
 125   2                      {
 126   3                              body[i].x=body[i-1].x;  
 127   3                              body[i].y=body[i-1].y;
 128   3                      }
 129   2                      body[0].x=head.x;
 130   2                      body[0].y=head.y;
 131   2                      head.x=food.x;
 132   2                      head.y=food.y;
 133   2      
 134   2                      
 135   2      
 136   2                      food.x=rand()%8;
 137   2                      food.y=rand()%8;
 138   2                      while(head.x==food.x&&head.y==food.y)
 139   2                      {
 140   3                              food.x=rand()%8;
 141   3                              food.y=rand()%8;
 142   3                      }
 143   2                      for(i=0;i<length;i++)
 144   2                      {
 145   3                              while(body[i].x==food.x&&body[i].y==food.y)
 146   3                              {
 147   4                                      food.x=rand()%8;
 148   4                                      food.y=rand()%8;
 149   4                              }
 150   3                      }               
 151   2      
 152   2              }
 153   1      }
 154          
 155          
 156          void snack_death()
 157          {
 158   1              u16 i,flag=1;
 159   1              for(i=1;i<length;i++)
 160   1              {
 161   2                      if(head.x==body[i].x&&head.y==body[i].y)
 162   2                      {
 163   3                              flag=0;
 164   3                              speed.x=0;
 165   3                              speed.y=0;
 166   3                      }       
 167   2              }
 168   1              if(flag==0)
 169   1              {
 170   2                      u16 i;
 171   2                      u8  hang_1[8]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
 172   2                      u8 lie_cry[8]={0x20,0x30,0x22,0x04,0x04,0x22,0x30,0x20};
 173   2                      while(k4)
 174   2                      {
 175   3                              for(i=0;i<8;i++)
 176   3                              {
 177   4                                      P0=hang_1[i];
 178   4                                      _74hc595send(lie_cry[i]);
 179   4                                      delay(1);
C51 COMPILER V9.01   SNACK                                                                 12/05/2018 20:25:58 PAGE 4   

 180   4                                      _74hc595send(0x00);
 181   4                              }
 182   3                      }
 183   2                      led=0xff;
 184   2                      welcome();
 185   2                      SnackInit();
 186   2                              
 187   2              }
 188   1      }
 189          
 190          void snack_score()
 191          {
 192   1              score=length-2;
 193   1              switch(score)
 194   1              {
 195   2                      case 1:led=0xfe;break;
 196   2                      case 2:led=0xfc;break;
 197   2                      case 3:led=0xf8;break;
 198   2                      case 4:led=0xf0;break;
 199   2                      case 5:led=0xe0;break;
 200   2                      case 6:led=0xc0;break;
 201   2                      case 7:led=0x80;break;
 202   2                      case 8:led=0x00;break;
 203   2                      default:break;  
 204   2              }
 205   1      }
 206          
 207          
 208          void welcome()
 209          {
 210   1              u8  hang_1[8]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
 211   1              u8 lie_2[8]={0x00,0x00,0x63,0x85,0x89,0x91,0x61,0x00};
 212   1              u8 lie_3[8]={0x00,0x00,0x42,0x81,0x91,0x91,0x6e,0x00};
 213   1              u8 lie_laugh[8]={0x20,0x40,0x24,0x02,0x02,0x24,0x40,0x20};
 214   1              u8  lie_1[8]={0x00,0x00,0x00,0x22,0x7e,0x02,0x00,0x00};
 215   1              u16 i,t=0;
 216   1              while(t<200)
 217   1              {
 218   2                      t++;
 219   2                      for(i=0;i<8;i++)
 220   2                      {
 221   3                              P0=hang_1[i];
 222   3                              _74hc595send(lie_laugh[i]);
 223   3                              delay(1);
 224   3                              _74hc595send(0x00);
 225   3                      }
 226   2              }
 227   1              t=0;
 228   1              while(t<100)
 229   1              {
 230   2                      t++;
 231   2                      for(i=0;i<8;i++)
 232   2                      {
 233   3                              P0=hang_1[i];
 234   3                              _74hc595send(lie_3[i]);
 235   3                              delay(1);
 236   3                              _74hc595send(0x00);
 237   3                      }
 238   2              }
 239   1              t=0;
 240   1              while(t<100)
 241   1              {
C51 COMPILER V9.01   SNACK                                                                 12/05/2018 20:25:58 PAGE 5   

 242   2                      t++;
 243   2                      for(i=0;i<8;i++)
 244   2                      {
 245   3                              P0=hang_1[i];
 246   3                              _74hc595send(lie_2[i]);
 247   3                              delay(1);
 248   3                              _74hc595send(0x00);
 249   3                      }
 250   2              }
 251   1              t=0;
 252   1              while(t<100)
 253   1              {
 254   2                      t++;
 255   2                      for(i=0;i<8;i++)
 256   2                      {
 257   3                              P0=hang_1[i];
 258   3                              _74hc595send(lie_1[i]);
 259   3                              delay(1);
 260   3                              _74hc595send(0x00);
 261   3                      }
 262   2              }       
 263   1      }
 264          
 265          
 266          void snack_circulation()
 267          {
 268   1              snack_move();
 269   1              snack_turn();
 270   1              snack_add();
 271   1              snack_death();
 272   1              snack_score();
 273   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1693    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     98      64
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
